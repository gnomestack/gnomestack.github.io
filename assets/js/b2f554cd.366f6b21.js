"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[477],{10:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"welcome","metadata":{"permalink":"/blog/welcome","editUrl":"https://github.com/gnomestack/gnomestack.github.io/tree/main/blog/blog/2023-11-05-welcome.md","source":"@site/blog/2023-11-05-welcome.md","title":"welcome","description":"Adventures in software development, automation, home labs, being a former","date":"2023-11-05T00:00:00.000Z","formattedDate":"November 5, 2023","tags":[{"label":"gnome","permalink":"/blog/tags/gnome"},{"label":"stack","permalink":"/blog/tags/stack"}],"readingTime":1.025,"hasTruncateMarker":true,"authors":[{"name":"BowTiedGnome","title":"Herder of Cats","url":"https://github.com/BowTiedGnome","imageURL":"https://github.com/bowtiedgnome.png","key":"btg"}],"frontMatter":{"slug":"welcome","title":"welcome","authors":["btg"],"tags":["gnome","stack"]},"unlisted":false},"content":"Adventures in software development, automation, home labs, being a former\\nstart up employee, and other misadventures.\\n\\nI\'m building gnomestack for .net and deno because they have underrated potential\\nfor general automation and to speed up application development.\\n\\nJoin me for more misadventures.\\n\\n\x3c!-- truncate --\x3e\\n\\nPart of gnomestack will be used to build out gnomelabs (homelabs).\\n\\n## Why Deno\\n\\nDeno has a focus on serverless though it sometimes fees like it doesn\'t know\\nwhat it wants to be as it tried to avoid package.json only to come back and\\nsupport node packages later.\\n\\nDeno\'s potential for automation lies within the use of es6 modules, its support\\nfor compiling to byte code, supprt for foreign function interfaces, and its\\nability easily install scripts as cli tools.\\n\\n## Why .NET\\n\\n.NET seems to attract those obsessed with patterns, particularly the repository\\nand CQRS and its backing company errs on the side of collecting too much data\\nin a telemetry happy frenzy.\\n\\nRegardless, .NET has made insane improvements to the BCL, cross platform support\\nfor .NET Core, source generators, and introduced native compliation.\\n\\nThe built in support for windows and the support for other systems are\\ncontinously improved makes it a strong candidate for building cross platform\\ntools."}]}')}}]);